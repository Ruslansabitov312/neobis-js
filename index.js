let today = new Date() //показывает текущие дату и время.
let day = today.getDay() //Вернет день недели от 0 (воскресенье) до 6 (суббота).
let daylist = [
  'Воскресенье',
  'Понедельник',
  'Вторник',
  'Среда',
  'Четверг',
  'Пятница',
  'Суббота',
]
console.log(`Сегодня: ${daylist[day]}`)

let hour = today.getHours() //возвращает часы указанной даты по местному времени.
let minute = today.getMinutes() //возвращает минуты указанной даты по местному времени.
let second = today.getSeconds() //возвращает секунды указанной даты по местному времени.

let prepand = hour >= 12 ? 'после полудня' : 'до полудня'
hour = hour >= 12 ? hour - 12 : hour
if (hour === 0 && prepand === 'после полудня') {
  if (minute === 0 && second === 0) {
    hour = 12
    prepand = 'полдень'
  } else {
    hour = 12
    prepand = 'после полудня'
  }
}

if (hour === 0 && prepand === 'до полудня') {
  if (minute === 0 && second === 0) {
    hour = 12
    prepand = 'полночь'
  } else {
    hour = 12
    prepand = 'до полудня'
  }
}

console.log(
  `Точное время: ${hour}часов ${prepand} : ${minute}минут : ${second}секунд`
)

// Дата и время в JavaScript представлены объектом Date. Нельзя создать «только дату» или «только время»: объекты Date всегда содержат и то, и другое.

// Счёт месяцев начинается с нуля (да, январь – это нулевой месяц).

// Дни недели в getDay() также отсчитываются с нуля, что соответствует воскресенью.

// Объект Date самостоятельно корректируется при введении значений, выходящих за рамки допустимых. Это полезно для сложения/вычитания дней/месяцев/недель.

// Даты можно вычитать, и разность возвращается в миллисекундах. Так происходит, потому что при преобразовании в число объект Date становится таймстампом.

// Используйте Date.now() для быстрого получения текущего времени в формате таймстампа.
